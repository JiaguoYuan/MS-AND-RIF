setwd("D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA")
rm(list=ls())
library(dplyr)
library(tidyverse)
library(openxlsx)
#1 MS  WGCNA 
setwd("D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\MS")

#1.1 Input
set <- read.csv("D:\\研一\\珊姐\\RIF\\shan_RF\\1.差异分析\\1.MS差异分析\\settt_41848_总表.csv",sep=",",row.names = 1)
group <- read.csv("D:\\研一\\珊姐\\RIF\\shan_RF\\1.差异分析\\1.MS差异分析\\group_settt_41848.csv",sep=",")
rownames(group) <- group$X

##1.2 MS WGCNA
library(WGCNA)  
options(stringsAsFactors = FALSE)

#1.2.1.Data preparation
exp <- t(set) %>% as.data.frame()

#1.2.2 Check for deletions
gsa <- goodSamplesGenes(exp,verbose = 3)
gsa$allOK

#1.2.3 Check for outliers 
sampleTree = hclust(dist(exp), method = "average")
sizeGrWindow(12,9) 
par(cex = 0.6);
par(mar = c(0,4,2,0))
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5,
     cex.axis = 1.5, cex.main = 2)
#deleted
abline(h = 18000, col = "red") 
clust = cutreeStatic(sampleTree, cutHeight = 18000, minSize = 10)
table(clust)   
keepSamples = (clust==1)  
exp = exp[keepSamples, ] 
nGenes = ncol(exp)
nSamples = nrow(exp)

#1.2.4 Group
group <- group[rownames(exp),]%>%.[,3] %>% as.data.frame() 
group <- mutate(group,class=recode(.,"MS"=1,"CTRL"=0))
groupp <- group[,-1] %>% as.data.frame()
rownames(groupp) <- rownames(exp)

#1.2.5 Phenotype is associated with the sample
sampleTree2 = hclust(dist(exp), method = "average")
traitColors = numbers2colors(groupp, signed = FALSE)

plotDendroAndColors(sampleTree2, traitColors,
                    groupLabels = names(groupp),
                    main = "Sample dendrogram and trait heatmap")

#1.2.6 Build an expression network. Estimate soft thresholds
library(WGCNA)
options(stringsAsFactors = FALSE);
enableWGCNAThreads()  #Enable multithreading
powers = c(c(1:10), seq(from = 12, to=20, by=2))
sft = pickSoftThreshold(exp, powerVector = powers,verbose = 5,networkType = "signed")

sizeGrWindow(9, 5);
par(mfrow = c(1,2));
cex1 = 0.9;
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
     main = paste("Scale independence"));
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     labels=powers,cex=cex1,col="red");
abline(h=0.85,col="red")
axis(side=2,at=0.85)
softPower =sft$powerEstimate
sft$powerEstimate
plot(sft$fitIndices[,1], sft$fitIndices[,5],
     xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
     main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
net = blockwiseModules(exp, power = 9 ,
                       TOMType = "signed", minModuleSize = 30,
                       reassignThreshold = 0, mergeCutHeight = 0.2,
                       numericLabels = TRUE, pamRespectsDendro = FALSE,
                       saveTOMs = TRUE,
                       saveTOMFileBase = "femaleMouseTOM",
                       verbose = 3)
table(net$colors) 
sizeGrWindow(12, 9)
mergedColors = labels2colors(net$colors)
plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]],
                    "Module colors",
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05)
#1.2.7 Save
moduleLabels = net$colors
moduleColors = labels2colors(net$colors)
MEs = net$MEs;
geneTree = net$dendrograms[[1]];
save(MEs, moduleLabels, moduleColors, geneTree,
     file = "FemaleLiver-02-networkConstruction-auto.RData")

#1.2.8 Correlation
lnames = load(file = "FemaleLiver-02-networkConstruction-auto.RData")
nGenes = ncol(exp)
nSamples = nrow(exp)
MEs0 = moduleEigengenes(exp, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
moduleTraitCor = cor(MEs, groupp, use = "p",method="spearman");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)
sizeGrWindow(10,6)
pva <- moduleTraitPvalue %>% as.data.frame() %>% filter(.,.<0.05)
mo <- moduleTraitCor %>% as.data.frame() %>% .[rownames(pva),] %>% as.data.frame()
MEss <- MEs[,rownames(pva)]
rownames(mo) <- rownames(pva)
pvaa <- as.matrix(pva)
mo <- as.matrix(mo)
textMatrix = paste(signif(mo, 2), "\n(",
                   signif(pvaa, 3), ")", sep = "");
dim(textMatrix) = dim(mo)
dev.off()
dev.new()
par(mar = c(3, 8.5, 3, 1))
labeledHeatmap(Matrix = mo,
               xLabels = names(groupp),
               yLabels = names(MEss),
               ySymbols = names(MEss),
               colorLabels = FALSE,
               colors = blueWhiteRed(50),
               textMatrix = textMatrix,
               setStdMargins = FALSE,
               cex.text = 1,
               zlim = c(-1,1),
               main = paste("Module-trait relationships"))
# p<0.05
pva <- moduleTraitPvalue %>% as.data.frame() %>% filter(.,.<0.05)
mo <- moduleTraitCor %>% as.data.frame() %>% .[rownames(pva),] %>% as.data.frame()
MEss <- MEs[,rownames(pva)]
rownames(mo) <- rownames(pva)
pvaa <- as.matrix(pva)
mo <- as.matrix(mo)
textMatrix = paste(signif(mo, 2), "\n(",
                   signif(pvaa, 3), ")", sep = "");
dim(textMatrix) = dim(mo)
dev.off()
dev.new()
par(mar = c(3, 8.5, 3, 1))
labeledHeatmap(Matrix = mo,
               xLabels = names(groupp),
               yLabels = names(MEss),
               ySymbols = names(MEss),
               colorLabels = FALSE,
               colors = blueWhiteRed(50),
               textMatrix = textMatrix,
               setStdMargins = FALSE,
               cex.text = 1,
               zlim = c(-1,1),
               main = paste("Module-trait relationships"))
X <- moduleTraitCor %>% as.data.frame()
X <- filter(X,X$.>0.3|X$.< -0.3)

#1.2.9 Output
# MEpaleturquoise" "MEgreenyellow"   "MEyellow"        "MEskyblue"       "MEmagenta"       "MEsalmon
A<- colnames(exp)[moduleColors == "paleturquoise"] %>% as.data.frame()
B<- colnames(exp)[moduleColors == "greenyellow"] %>% as.data.frame()
C<- colnames(exp)[moduleColors == "yellow"] %>% as.data.frame()
D<- colnames(exp)[moduleColors == "skyblue"] %>% as.data.frame()
E<- colnames(exp)[moduleColors == "magenta"] %>% as.data.frame()
H<- colnames(exp)[moduleColors == "salmon"] %>% as.data.frame()
T <- rbind(A,B,C,D,E,H)
MS_WGCNA_diss <- T
save(MS_WGCNA_diss,file="MS_WGCNA_diss.Rdata")

################################################
################################################
rm(list=ls())
#2. RIF WGCNA
library(dplyr)
library(tidyverse)
library(openxlsx)
rm(list=ls())
setwd("D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\RIF")

#2.1 Input

set <- read.csv("D:\\研一\\珊姐\\RIF\\shan_RF\\1.差异分析\\1.RIF差异分析\\settt_GSE11974_总表.csv",sep=",",row.names = 1)
group <- read.csv("D:\\研一\\珊姐\\RIF\\shan_RF\\1.差异分析\\1.RIF差异分析\\group_settt_11974.csv",sep=",")
rownames(group) <- group$X

#2.2 RIF WGCNA
library(WGCNA)  #加载WGCNA包
options(stringsAsFactors = FALSE)

#2.1 Data preparation
exp <- t(set) %>% as.data.frame()
# rownames(exp) <- AD_group$grou

#2.2.2 Check for deletions
gsa <- goodSamplesGenes(exp,verbose = 3)
gsa$allOK

#2.2.3 Check for outliers 
sampleTree = hclust(dist(exp), method = "average")
sizeGrWindow(12,9) 
par(cex = 0.6);
par(mar = c(0,4,2,0))
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5,
     cex.axis = 1.5, cex.main = 2)
abline(h = 170, col = "red") 
clust = cutreeStatic(sampleTree, cutHeight = 170, minSize = 10)
table(clust)   
keepSamples = (clust==1) 
exp = exp[keepSamples, ]  
nGenes = ncol(exp)
nSamples = nrow(exp)

#2.2.4 Group
group <- group[rownames(exp),]%>%.[,4] %>% as.data.frame() 
group <- mutate(group,class=recode(.,"RIF"=1,"CTRL"=0))
groupp <- group[,-1] %>% as.data.frame()
rownames(groupp) <- rownames(exp)

#2.2.5 Phenotype is associated with the sample
sampleTree2 = hclust(dist(exp), method = "average")
traitColors = numbers2colors(groupp, signed = FALSE) 
plotDendroAndColors(sampleTree2, traitColors,
                    groupLabels = names(groupp),
                    main = "Sample dendrogram and trait heatmap")

#2.2.6 Build an expression network. Estimate soft thresholds
library(WGCNA)
options(stringsAsFactors = FALSE);
enableWGCNAThreads()  #开启多线程
powers = c(c(1:10), seq(from = 12, to=20, by=2))
sft = pickSoftThreshold(exp, powerVector = powers,verbose = 5,networkType = "signed")
sizeGrWindow(9, 5);
par(mfrow = c(1,2));
cex1 = 0.9;
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
     main = paste("Scale independence"));
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     labels=powers,cex=cex1,col="red");
abline(h=0.85,col="red")
axis(side=2,at=0.85)
plot(sft$fitIndices[,1], sft$fitIndices[,5],
     xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
     main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
net = blockwiseModules(exp, power = 8 ,
                       TOMType = "signed", minModuleSize = 30,
                       reassignThreshold = 0, mergeCutHeight = 0.2,
                       numericLabels = TRUE, pamRespectsDendro = FALSE,
                       saveTOMs = TRUE,
                       saveTOMFileBase = "femaleMouseTOM",
                       verbose = 3)
table(net$colors)
sizeGrWindow(12, 9)
mergedColors = labels2colors(net$colors)
plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]],
                    "Module colors",
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05)
#2.2.7 Save
moduleLabels = net$colors
moduleColors = labels2colors(net$colors)
MEs = net$MEs;
geneTree = net$dendrograms[[1]];
save(MEs, moduleLabels, moduleColors, geneTree,
     file = "FemaleLiver-02-networkConstruction-auto.RData")

#2.2.8 Correlation
lnames = load(file = "FemaleLiver-02-networkConstruction-auto.RData")
nGenes = ncol(exp)
nSamples = nrow(exp)
MEs0 = moduleEigengenes(exp, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
moduleTraitCor = cor(MEs, groupp, use = "p",method="spearman");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)
sizeGrWindow(10,6)
textMatrix = paste(signif(moduleTraitCor, 2), "\n(",
                   signif(moduleTraitPvalue, 3), ")", sep = "");
dim(textMatrix) = dim(moduleTraitCor)
par(mar = c(6, 8.5, 3, 3))
pdf("WGCNA_labeledHeatmap.pdf", width = 10, height = 8)

par(mar = c(10, 10, 10, 10)) # 设置合适的边距
png("WGCNA_labeledHeatmasp.png", width = 4800, height = 4800, res = 300)
labeledHeatmap(Matrix = moduleTraitCor,
               xLabels = names(groupp),
               yLabels = names(MEs),
               ySymbols = names(MEs),
               colorLabels = FALSE,
               colors = blueWhiteRed(50),
               textMatrix = textMatrix,
               setStdMargins = FALSE,
               cex.text = 0.5,
               zlim = c(-1,1),
               main = paste("Module-trait relationships"))
dev.new()
dev.off()
#p<0.05
pva <- moduleTraitPvalue %>% as.data.frame() %>% filter(.,.<0.05)
mo <- moduleTraitCor %>% as.data.frame() %>% .[rownames(pva),] %>% as.data.frame()
MEss <- MEs[,rownames(pva)]
rownames(mo) <- rownames(pva)
pvaa <- as.matrix(pva)
mo <- as.matrix(mo)
textMatrix = paste(signif(mo, 2), "\n(",
                   signif(pvaa, 3), ")", sep = "");
dim(textMatrix) = dim(mo)
dev.off()
dev.new()
par(mar = c(3, 8.5, 3, 1))
labeledHeatmap(Matrix = mo,
               xLabels = names(groupp),
               yLabels = names(MEss),
               ySymbols = names(MEss),
               colorLabels = FALSE,
               colors = blueWhiteRed(50),
               textMatrix = textMatrix,
               setStdMargins = FALSE,
               cex.text = 0.5,
               zlim = c(-1,1),

#2.2.9 Output
X <- moduleTraitCor %>% as.data.frame()
X <- filter(X,X$.>0.8|X$.< -0.8)
# [1] "MElightcyan"   "MEfloralwhite" "MEskyblue"  
A<- colnames(exp)[moduleColors == "lightcyan"] %>% as.data.frame()
B<- colnames(exp)[moduleColors == "floralwhite"] %>% as.data.frame()
C<- colnames(exp)[moduleColors == "skyblue"] %>% as.data.frame()
T <- rbind(A,B,C)
IF_WGCNA_diss <- T
save(RIF_WGCNA_diss,file="RIF_WGCNA_diss.Rdata")
write.csv (A,"lightcyan.csv")
write.csv (B,"floralwhite.csv")
write.csv (C,"skyblue.csv")
write.csv (T,"D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\RIF\\RIF_WGCNA.csv")

save.image("RIF_WGCNA.RData")
load("D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\RIF\\RIF_WGCNA.RData")


####################
#3. Hub genes 
B <-list(MS_WGCNA=MS_T$.,RIF_WGCNA=RIF_T$.)
MS_RIF_WGCNA <- Reduce(intersect,B) %>% as.data.frame()
write.csv(MS_RIF_WGCNA,"D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\MS_RIF_WGCNA.csv")
ggvenn(B,fill_color = c("#9DB4CE"	,"#EDA1A4"),stroke_size = 0.5, set_name_size = 5,   fill_alpha = 0.5,  text_size = 6, show_percentage = F)
##
MS_RIF_bd <- read.csv("D:\\研一\\珊姐\\RIF\\shan_RF\\1.差异分析\\bd.csv",sep=",")
C <- list(DEGs=MS_RIF_bd$.,WGCNA=MS_RIF_WGCNA$.)
Final <- Reduce(union,C) 
MS_set <- read.csv("D:\\研一\\珊姐\\RIF\\shan_RF\\1.差异分析\\1.MS差异分析\\settt_41847_总表.csv",sep=",",row.names = 1) %>% t(.) %>% as.data.frame()
MS_union <- MS_set[,Final]
#output
write.csv(RIF_union,"D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\RIF_union.csv")
write.csv(MS_union,"D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\MS_union.csv")
save.image("D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\MS_RIF_Union.csv")
load("D:\\研一\\珊姐\\RIF\\shan_RF\\2.WGCNA\\MS_RIF_Union.csv")

